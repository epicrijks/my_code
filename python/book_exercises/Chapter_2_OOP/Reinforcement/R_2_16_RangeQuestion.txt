Our Range class, from Section 2.3.5, relies on the formula
max(0, (stop − start + step − 1) // step)
to compute the number of elements in the range. It is not immediately ev-
ident why this formula provides the correct calculation, even if assuming
a positive step size. Justify this formula, in your own words.


stop - start gives the statistical range of the values
if we divided that by the step size, we would get the number of steps in the range.

(i.e. start = 0, stop = 10, step = 2)
stat range is 10 - 0 = 10.
Divide that by 2, and there are five steps total.
Checking, 0, 2, 4, 6, 8

But what about "weird" cases
(i.e. start = 2, stop = 11, step = 4)
stat range is 11 - 2 = 9
9 // 4 = 2
Checking: 2, 6, 10
that's not quite right. It should be 3.

We need to adjust for when the step doesn't end exactly on the stop.
So, let's add another step.
stat range is 11 - 2 = 9
Let's add the additional step (9 + 4 = 13)
13 // 4 = 3
Great!

But doesn't adding the step add in extra step when the step does land on stop?
Like in the first example? Yes.
Let's subtract 1 to prevent that from happening.

(stop - start + step - 1) // step